{"ast":null,"code":"const PDFDocument = require('pdfkit');\nconst {\n  Readable\n} = require('stream');\nconst Book = require('../models/book');\n\n// Function to generate PDF for a specific book\nasync function downloadBookPDF(req, res) {\n  try {\n    const {\n      bookId\n    } = req.params;\n\n    // Fetch book details\n    const book = await Book.findByPk(bookId);\n    if (!book) {\n      return res.status(404).json({\n        message: 'Book not found'\n      });\n    }\n\n    // Create a PDF document\n    const doc = new PDFDocument();\n    const stream = doc.pipe(new Readable({\n      read() {}\n    }));\n\n    // Add book details to the PDF\n    doc.fontSize(20).text(`Title: ${book.title}`, {\n      underline: true\n    });\n    doc.fontSize(16).text(`Author: ${book.author}`);\n    doc.text(`Publication Date: ${book.publication_date}`);\n    doc.text(`Description: ${book.description}`);\n    if (book.cover_image_url) {\n      // If cover image URL is available, include it in the PDF\n      doc.text(`Cover Image URL: ${book.cover_image_url}`);\n    }\n\n    // Finalize the PDF and end the stream\n    doc.end();\n\n    // Set headers and pipe the PDF to the response\n    res.setHeader('Content-Type', 'application/pdf');\n    res.setHeader('Content-Disposition', `attachment; filename=book_${bookId}.pdf`);\n    stream.pipe(res);\n  } catch (error) {\n    console.error('Error generating PDF:', error);\n    res.status(500).json({\n      message: 'Internal Server Error',\n      error: error.message\n    });\n  }\n}\nmodule.exports = {\n  // other exports...\n  downloadBookPDF\n};","map":{"version":3,"names":["PDFDocument","require","Readable","Book","downloadBookPDF","req","res","bookId","params","book","findByPk","status","json","message","doc","stream","pipe","read","fontSize","text","title","underline","author","publication_date","description","cover_image_url","end","setHeader","error","console","module","exports"],"sources":["C:/Users/AmadisUser14/Desktop/Register/register_form/client/src/components/BookList.js"],"sourcesContent":["const PDFDocument = require('pdfkit');\r\nconst { Readable } = require('stream');\r\nconst Book = require('../models/book');\r\n\r\n// Function to generate PDF for a specific book\r\nasync function downloadBookPDF(req, res) {\r\n  try {\r\n    const { bookId } = req.params;\r\n\r\n    // Fetch book details\r\n    const book = await Book.findByPk(bookId);\r\n    if (!book) {\r\n      return res.status(404).json({ message: 'Book not found' });\r\n    }\r\n\r\n    // Create a PDF document\r\n    const doc = new PDFDocument();\r\n    const stream = doc.pipe(new Readable({\r\n      read() {}\r\n    }));\r\n\r\n    // Add book details to the PDF\r\n    doc.fontSize(20).text(`Title: ${book.title}`, { underline: true });\r\n    doc.fontSize(16).text(`Author: ${book.author}`);\r\n    doc.text(`Publication Date: ${book.publication_date}`);\r\n    doc.text(`Description: ${book.description}`);\r\n    if (book.cover_image_url) {\r\n      // If cover image URL is available, include it in the PDF\r\n      doc.text(`Cover Image URL: ${book.cover_image_url}`);\r\n    }\r\n\r\n    // Finalize the PDF and end the stream\r\n    doc.end();\r\n\r\n    // Set headers and pipe the PDF to the response\r\n    res.setHeader('Content-Type', 'application/pdf');\r\n    res.setHeader('Content-Disposition', `attachment; filename=book_${bookId}.pdf`);\r\n    stream.pipe(res);\r\n  } catch (error) {\r\n    console.error('Error generating PDF:', error);\r\n    res.status(500).json({ message: 'Internal Server Error', error: error.message });\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  // other exports...\r\n  downloadBookPDF,\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACrC,MAAM;EAAEC;AAAS,CAAC,GAAGD,OAAO,CAAC,QAAQ,CAAC;AACtC,MAAME,IAAI,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAEtC;AACA,eAAeG,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAE;EACvC,IAAI;IACF,MAAM;MAAEC;IAAO,CAAC,GAAGF,GAAG,CAACG,MAAM;;IAE7B;IACA,MAAMC,IAAI,GAAG,MAAMN,IAAI,CAACO,QAAQ,CAACH,MAAM,CAAC;IACxC,IAAI,CAACE,IAAI,EAAE;MACT,OAAOH,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAiB,CAAC,CAAC;IAC5D;;IAEA;IACA,MAAMC,GAAG,GAAG,IAAId,WAAW,CAAC,CAAC;IAC7B,MAAMe,MAAM,GAAGD,GAAG,CAACE,IAAI,CAAC,IAAId,QAAQ,CAAC;MACnCe,IAAIA,CAAA,EAAG,CAAC;IACV,CAAC,CAAC,CAAC;;IAEH;IACAH,GAAG,CAACI,QAAQ,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,UAAUV,IAAI,CAACW,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAClEP,GAAG,CAACI,QAAQ,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,WAAWV,IAAI,CAACa,MAAM,EAAE,CAAC;IAC/CR,GAAG,CAACK,IAAI,CAAC,qBAAqBV,IAAI,CAACc,gBAAgB,EAAE,CAAC;IACtDT,GAAG,CAACK,IAAI,CAAC,gBAAgBV,IAAI,CAACe,WAAW,EAAE,CAAC;IAC5C,IAAIf,IAAI,CAACgB,eAAe,EAAE;MACxB;MACAX,GAAG,CAACK,IAAI,CAAC,oBAAoBV,IAAI,CAACgB,eAAe,EAAE,CAAC;IACtD;;IAEA;IACAX,GAAG,CAACY,GAAG,CAAC,CAAC;;IAET;IACApB,GAAG,CAACqB,SAAS,CAAC,cAAc,EAAE,iBAAiB,CAAC;IAChDrB,GAAG,CAACqB,SAAS,CAAC,qBAAqB,EAAE,6BAA6BpB,MAAM,MAAM,CAAC;IAC/EQ,MAAM,CAACC,IAAI,CAACV,GAAG,CAAC;EAClB,CAAC,CAAC,OAAOsB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7CtB,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,uBAAuB;MAAEe,KAAK,EAAEA,KAAK,CAACf;IAAQ,CAAC,CAAC;EAClF;AACF;AAEAiB,MAAM,CAACC,OAAO,GAAG;EACf;EACA3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}